/*
 * Copyright (C) 2015 Oguz Babaoglu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group = POM_GROUP_ID
version = POM_VERSION

apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def BIN_USER = "";
def BIN_KEY = "";
def OSS_USER = "";
def OSS_PASS = "";
def Properties properties = new Properties()
try {
  properties.load(new FileInputStream('credential.properties'))
  BIN_USER = properties['bintray.user'];
  BIN_KEY = properties['bintray.apikey'];
  OSS_USER = properties['oss.user'];
  OSS_PASS = properties['oss.password'];
} catch (FileNotFoundException ignored) {
  println 'Failed to find file credential.properties. Maven deploy disabled'
}

bintray {
  user = BIN_USER
  key = BIN_KEY
  configurations = ['archives']
  pkg {
    repo = 'maven'
    name = POM_NAME
    desc = POM_DESCRIPTION
    websiteUrl = POM_URL
    issueTrackerUrl = POM_SCM_URL_ISSUES
    vcsUrl = POM_SCM_URL
    licenses = [POM_LICENSE]
    publish = true
    version {
      name = POM_VERSION
      gpg {
        sign = true
      }
      mavenCentralSync {
        sync = true
        user = OSS_USER
        password = OSS_PASS
      }
    }
  }
}

install {
  repositories.mavenInstaller {
    pom {
      project {
        name POM_NAME
        packaging POM_PACKAGING
        description POM_DESCRIPTION
        url POM_URL
        scm {
          url POM_SCM_URL
          connection POM_SCM_CONNECTION
          developerConnection POM_SCM_DEV_CONNECTION
        }
        licenses {
          license {
            name POM_LICENSE_NAME
            url POM_LICENSE_URL
            distribution POM_LICENSE_DIST
          }
        }
        developers {
          developer {
            id POM_DEVELOPER_ID
            name POM_DEVELOPER_NAME
            email POM_DEVELOPER_EMAIL
          }
        }
      }
    }
  }
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.sourceFiles
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.sourceFiles
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}
